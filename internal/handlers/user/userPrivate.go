package user

import (
	tgbotapi "github.com/go-telegram-bot-api/telegram-bot-api/v5"
)

func UserCbd(bot *tgbotapi.BotAPI) {

}

func ParsingUserMessage(update tgbotapi.Update, bot *tgbotapi.BotAPI) {
	text := update.Message.Text
	userID := update.Message.From.ID
	//name := update.Message.From.FirstName
	//chatID := update.Message.Chat.ID

	//var balance int
	//_ = db.QueryRow("SELECT balance FROM users WHERE tg_id = ($1);",
	//	userID,
	//).Scan(&balance)

	switch text {
	case "/start":
		//k := internal.CheckUser(database, userID)
		//if !k {
		//	err := internal.InsertUser(database, userID, name)
		//	if err != nil {
		//		fmt.Println(err)
		//	}
		//} else if k {
		msg := tgbotapi.NewMessage(userID, "–•–æ—Ä–æ—à–µ–π –∏–≥—Ä—ã!")
		msg.ReplyMarkup = tgbotapi.NewReplyKeyboard(
			tgbotapi.NewKeyboardButtonRow(
				tgbotapi.NewKeyboardButton("üñ± –∫–ª–∏–∫–∞—Ç—å üñ±"),
				tgbotapi.NewKeyboardButton("üí∂–±—É—Å—Ç–µ—Ä –∞–≤—Ç–æ–∫–ª–∏–∫–æ–≤üí∂"),
			),
			tgbotapi.NewKeyboardButtonRow(
				tgbotapi.NewKeyboardButton("üè™ –º–∞–≥–∞–∑–∏–Ω üè™"),
				tgbotapi.NewKeyboardButton("–ø–æ–º–æ—â—å"),
			),
			tgbotapi.NewKeyboardButtonRow(
				tgbotapi.NewKeyboardButton("üí∞ —Ä–µ–∫–ª–∞–º–∞ üí∞"),
				tgbotapi.NewKeyboardButton("üè† –∫–ª–∞–Ω—ã üè†"),
			),
		)
		bot.Send(msg)

		//}
	case "üñ± –∫–ª–∏–∫–∞—Ç—å üñ±":
		msg := tgbotapi.NewMessage(userID, "–ö–ª–∏–∫–∞–π –Ω–∏–∂–µ")
		msg.ReplyMarkup = tgbotapi.NewInlineKeyboardMarkup(
			tgbotapi.NewInlineKeyboardRow(
				tgbotapi.NewInlineKeyboardButtonData("x1", "user/getmoney?1"),
				tgbotapi.NewInlineKeyboardButtonData("x1", "user/getmoney?1"),
				tgbotapi.NewInlineKeyboardButtonData("x1", "user/getmoney?1"),
				tgbotapi.NewInlineKeyboardButtonData("x1", "user/getmoney?1"),
			),
			tgbotapi.NewInlineKeyboardRow(
				tgbotapi.NewInlineKeyboardButtonData("x1", "user/getmoney?1"),
				tgbotapi.NewInlineKeyboardButtonData("x1", "user/getmoney?1"),
				tgbotapi.NewInlineKeyboardButtonData("x1", "user/getmoney?1"),
				tgbotapi.NewInlineKeyboardButtonData("x1", "user/getmoney?1"),
			),
			tgbotapi.NewInlineKeyboardRow(
				tgbotapi.NewInlineKeyboardButtonData("x1", "user/getmoney?1"),
				tgbotapi.NewInlineKeyboardButtonData("x1", "user/getmoney?1"),
				tgbotapi.NewInlineKeyboardButtonData("x2", "user/getmoney?2"),
				tgbotapi.NewInlineKeyboardButtonData("x1", "user/getmoney?1"),
			),
			tgbotapi.NewInlineKeyboardRow(
				tgbotapi.NewInlineKeyboardButtonData("x1", "user/getmoney?1"),
				tgbotapi.NewInlineKeyboardButtonData("x1", "user/getmoney?1"),
				tgbotapi.NewInlineKeyboardButtonData("x1", "user/getmoney?1"),
				tgbotapi.NewInlineKeyboardButtonData("x1", "user/getmoney?1"),
			),
		)
		//msg.ReplyMarkup = tgbotapi.NewReplyKeyboard(
		//	tgbotapi.NewKeyboardButtonRow(
		//		tgbotapi.NewKeyboardButton("–ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"),
		//	),
		//)
		bot.Send(msg)
	case "üí∂–±—É—Å—Ç–µ—Ä –∞–≤—Ç–æ–∫–ª–∏–∫–æ–≤üí∂":
		/*if —Å—Ç–∞—Ç—É—Å –±—É—Å—Ç–µ—Ä–∞ == –∞–∫—Ç–∏–≤–µ–Ω{
			msg := tgbotapi.NewMessage(userID, "–£ –≤–∞—Å —É–∂–µ –≤–∫–ª—é—á–µ–Ω –±—É—Å—Ç–µ—Ä")
		} else {
			msg := tgbotapi.NewMessage(userID, "–ë—É—Å—Ç–µ—Ä –≤–∫–ª—é—á–µ–Ω")
			// –≤ —Ä–µ–¥–∏—Å–∫—É –ø–∏—Ö–∞—Ç—å —Ç–æ, —á—Ç–æ –≤ —Å–ª–µ–¥ —Ä–∞–∑ –æ–Ω –ø–æ–ª—É—á–∏—Ç x20 –º–æ–Ω–µ—Ç
		}*/

	}
}
